// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: feedList.sql

package database

import (
	"context"
)

const feedList = `-- name: FeedList :many
SELECT a.name as feedName, a.url, b.name as userName FROM feeds as a 
INNER JOIN users as b on a.user_id = b.id
`

type FeedListRow struct {
	Feedname string
	Url      string
	Username string
}

func (q *Queries) FeedList(ctx context.Context) ([]FeedListRow, error) {
	rows, err := q.db.QueryContext(ctx, feedList)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FeedListRow
	for rows.Next() {
		var i FeedListRow
		if err := rows.Scan(&i.Feedname, &i.Url, &i.Username); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
